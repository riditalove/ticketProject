<?php

App::uses('AppController', 'Controller');

/**
 * Configs Controller
 * Owner: Abdul Jalil
 * http://www.softwareend.com
 * @property Config $Config
 * @property PaginatorComponent $Paginator
 */
class ConfigsController extends AppController
{

    /**
     * Components
     *
     * @var array
     */
    public $components = array('Paginator', 'Uploader');

    /**
     * index method
     * Generated by Abdul Jalil
     * @return void
     */
    public function index()
    {
        $this->Config->recursive = 0;
        $conditions = array('Config.type' => '3');
        $this->Paginator->settings = array('conditions' => $conditions, 'order' => array('Config.id' => 'ASC'));
        $this->set('configs', $this->Paginator->paginate());
        $this->loadModel('User');
        $designations = $this->User->find('list', array('order' => array('name' => 'ASC')));
        $this->set(compact('designations'));
    }

    /**
     * edit method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function edit()
    {
        if ($this->request->isPost() || $this->request->isPut()) {
            foreach ($this->request->data['Config'] as $key => $value) {
                $this->Config->query('UPDATE configs SET `value` = \'' . $value . '\' WHERE `key` = \'' . $key . '\'');
            }
            //$this->Uploader->uploadFile($this->request->data['User']['image'], 'bg', '');
            $this->Flash->success('The config has been saved.');
            return $this->redirect(array('action' => 'index'));
        }


        $this->loadModel('User');
        $users = $this->User->find('all', array('fields' => array('id', 'label'), 'recursive' => -1));
        $this->set('users', $this->tojson($users, 'User'));

        $designations = $this->User->Designation->find('all', array('fields' => array('id', 'label'), 'conditions' => array('status' => E_ERROR), 'recursive' => -1));
        $this->set('desigs', $this->tojson($designations, 'Designation'));

        $roles = $this->User->Role->find('list', array('conditions' => array('status' => E_ERROR)));
        $designations = $this->User->Designation->find('list', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC')));
        $this->set(compact('roles', 'designations'));
    }

    /**
     * edit method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function edit_certification()
    {
        if ($this->request->isPost() || $this->request->isPut()) {
            foreach ($this->request->data['Config'] as $key => $value) {
                $this->Config->query('UPDATE configs SET `value` = \'' . $value . '\' WHERE `key` = \'' . $key . '\'');
            }

            $this->Flash->success('The config has been saved.');
            return $this->redirect(array('action' => 'edit_certification'));
        }

        $users = ClassRegistry::init('User')->find('list', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC')));
        $companies = ClassRegistry::init('Company')->find('list', array('conditions' => array('status' => E_ERROR)));
        $this->set(compact('users', 'companies'));
    }

    /**
     * rem_get_settings
     *
     * @throws NotFoundException
     * @param string $username
     * @return void
     */
    public function rem_get_settings()
    {
        if (isset($_SERVER['HTTP_OS_SE']) && $this->request->data('get_set') != null) {
            $this->autoRender = FALSE;

            $conf = $this->Config->find('list', array('fields' => array('key', 'value')));
            $arr = array();
            foreach ($conf as $key => $value) {
                $arr[] = array('k' => $key, 'v' => $value);
            }
            $str['data'] = $arr;
            echo json_encode($str, true);
        }
    }
}
