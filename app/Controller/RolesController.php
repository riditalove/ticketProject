<?php

App::uses('AppController', 'Controller');

/**
 * Roles Controller
 * Owner: Abdul Jalil
 * http://www.softwareend.com
 * @property Role $Role
 * @property PaginatorComponent $Paginator
 */
class RolesController extends AppController
{

    /**
     * Components
     *
     * @var array
     */
    public $components = array('Paginator');

    /**
     * index method
     * Generated by Abdul Jalil
     * @return void
     */
    public function index()
    {
        $this->Role->recursive = 0;
        $this->set('roles', $this->Paginator->paginate());
    }

    /**
     * view method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function view($id = null)
    {
        if (!$this->Role->exists($id)) {
            throw new NotFoundException(__('Invalid role'));
        }
        $options = array('conditions' => array('Role.' . $this->Role->primaryKey => $id), 'recursive' => -1);
        $role = $this->Role->find('first', $options);
        $this->set('role', $role);
    }

    /**
     * add method
     *
     * @return void
     */
    public function add()
    {
        if ($this->request->is('post')) {
            // pr($this->request->data, 1);
            $this->Role->create();
            $this->request->data['Role']['entry_by'] = $this->Auth->user('id');
            $this->request->data['Role']['roles'] = json_encode($this->request->data['Role']['roles']);
            if ($this->Role->save($this->request->data)) {
                //$data = $this->encode($this->request->data);
                //$this->curlSend('roles/ajax_add', array('_t_' => time(), 'd' => $data));

                $this->Flash->success('The role has been saved.');
                return $this->redirect(array('action' => 'index'));
            } else {
                $this->Flash->error('The role could not be saved. Please, try again.');
            }
        }

        $acl = [
            'Master Settings' =>
                [
                    'Role Management' => ['controller' => 'roles', 'action' => ['index' => 'List', 'view' => 'View Details', 'add' => 'Add New', 'edit' => 'Edit Role', 'delete' => 'Delete Role']],
                    'Config Management' => ['controller' => 'configs', 'action' => ['index' => 'List', 'edit' => 'Edit All']],
                    'Travel Expense' => ['controller' => 'travelexpenses', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Traveller Management' => ['controller' => 'travellers', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Travel Histories' => ['controller' => 'travelhistories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Health Records' => ['controller' => 'healthrecords', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Visa Histories' => ['controller' => 'visahistories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Membership Management' => ['controller' => 'memberships', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Healthrecords Management' => ['controller' => 'healthrecords', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    // 'Factory Management' => ['controller' => 'kpifactories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    // 'Factory Bank' => ['controller' => 'factorybanks', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    // 'Indesore Bank' => ['controller' => 'indesorebanks', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    // 'Applicant Management' => ['controller' => 'applicants', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    // 'Buyer Management' => ['controller' => 'kpibuyers', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'Department Management' => ['controller' => 'kpidepartments', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                    'User Management' => ['controller' => 'users', 'action' => ['index' => 'User List', 'add' => 'Add User', 'edit' => 'Edit User']],
                    // 'Access Log Management' => ['controller' => 'logs', 'action' => ['index' => 'List', 'delete' => 'Delete Login History']],
                ],
            'PO Information' =>
                [
                    'PO Information' => ['controller' => 'poinformations', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'view' => 'View Detail', 'poinformation_copy' => 'Copy PO Info', 'po_cancel' => 'PO Cancel', 'delete' => 'Delete']],
                    'Purchase Contract' => ['controller' => 'purchasecontracts', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'view' => 'View Details', 'create_proforma' => 'Add Proforma Invoice', 'proforma_list' => 'Proforma List', 'edit_proforma' => 'Edit Proforma Invoice', 'proforma_invoice' => 'Proforma Invoice', 'add_master_lc' => 'Add Master LC', 'delete' => 'Delete']],
                    //     'Cutting Status' => ['controller' => 'cuttingstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'Print/Embroidery Status' => ['controller' => 'printembstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'Sewing Input Status' => ['controller' => 'sewinginputstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'Laundry/Wash Status' => ['controller' => 'washstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'Packing/Finishing Status' => ['controller' => 'packingstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'FRI Status' => ['controller' => 'fristatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'QA Head Comment' => ['controller' => 'qaheadcomments', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    //     'Traceability Team' => ['controller' => 'traceabilityteams', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                ],
            'Sample' =>
                [
                    'Sample' => ['controller' => 'samples', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'sample_copy' => 'Sample Copy', 'view' => 'View Detail', 'delete' => 'Delete']],
                ],
            'Report' =>
                [
                    'Traceability Reprot' => ['controller' => 'poinformations', 'action' => ['traceability_report' => 'Traceability Report', 'traceability_pending_report' => 'Traceability Pending Report', 'production_report' => 'In Production Report', 'merchandising_report' => 'Merchandising Report']],
                    'Shipment Reprot' => ['controller' => 'fristatuses', 'action' => ['shipment_report' => 'Shipment Report']],
                ],
        ];
        $this->set('acls', $acl);
    }

    /**
     * edit method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function edit($id = null)
    {
        if (!$this->Role->exists($id)) {
            throw new NotFoundException(__('Invalid role'));
        }
        if ($this->request->isPost() || $this->request->isPut()) {
            $this->request->data['Role']['edit_by'] = $this->Auth->user('id');

            $this->request->data['Role']['roles'] = json_encode($this->request->data['Role']['roles']);
            //pr($this->request->data,1);
            if ($this->Role->save($this->request->data)) {
                //$data = $this->encode($this->request->data);
                //$this->curlSend('roles/ajax_edit', array('_t_' => time(), 'd' => $data));

                $this->Flash->success('The role has been updated.');
                return $this->redirect(array('action' => 'index'));
            } else {
                $this->Flash->error('The role could not be updated. Please, try again.');
            }
        } else {
            $options = array('conditions' => array('Role.' . $this->Role->primaryKey => $id));
            $this->request->data = $this->Role->find('first', $options);
            //$this->set('menudata', $this->getmenues());

            $acl = [
                'Master Settings' =>
                    [
                        'Role Management' => ['controller' => 'roles', 'action' => ['index' => 'List', 'view' => 'View Details', 'add' => 'Add New', 'edit' => 'Edit Role', 'delete' => 'Delete Role']],
                        'Config Management' => ['controller' => 'configs', 'action' => ['index' => 'List', 'edit' => 'Edit All']],
                        'Travel Expense' => ['controller' => 'travelexpenses', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Traveller Management' => ['controller' => 'travellers', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Travel Histories' => ['controller' => 'travelhistories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Health Records' => ['controller' => 'healthrecords', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Visa Histories' => ['controller' => 'visahistories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Membership Management' => ['controller' => 'memberships', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Healthrecords Management' => ['controller' => 'healthrecords', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'Factory Management' => ['controller' => 'kpifactories', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'Factory Bank' => ['controller' => 'factorybanks', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'Indesore Bank' => ['controller' => 'indesorebanks', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        'Applicant Management' => ['controller' => 'applicants', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'Buyer Management' => ['controller' => 'kpibuyers', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'Department Management' => ['controller' => 'kpidepartments', 'action' => ['index' => 'List', 'add' => 'Add', 'edit' => 'Edit All']],
                        // 'User Management' => ['controller' => 'users', 'action' => ['index' => 'User List', 'add' => 'Add User', 'edit' => 'Edit User']],
                        // 'Access Log Management' => ['controller' => 'logs', 'action' => ['index' => 'List', 'delete' => 'Delete Login History']],
                    ],
                'PO Information' =>
                    [
                        'PO Information' => ['controller' => 'poinformations', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'view' => 'View Detail', 'poinformation_copy' => 'Copy PO Info', 'po_cancel' => 'PO Cancel', 'delete' => 'Delete']],
                        'Purchase Contract' => ['controller' => 'purchasecontracts', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'view' => 'View Details', 'create_proforma' => 'Add Proforma', 'proforma_list' => 'Proforma List', 'edit_proforma' => 'Edit Proforma', 'proforma_invoice' => 'Proforma Invoice', 'add_master_lc' => 'Add Master LC', 'delete' => 'Delete']],
                        //     'Cutting Status' => ['controller' => 'cuttingstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'Print/Embroidery Status' => ['controller' => 'printembstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'Sewing Input Status' => ['controller' => 'sewinginputstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'Laundry/Wash Status' => ['controller' => 'washstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'Packing/Finishing Status' => ['controller' => 'packingstatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'FRI Status' => ['controller' => 'fristatuses', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'QA Head Comment' => ['controller' => 'qaheadcomments', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                        //     'Traceability Team' => ['controller' => 'traceabilityteams', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'delete' => 'Delete']],
                    ],
                'Sample' =>
                    [
                        'Sample' => ['controller' => 'samples', 'action' => ['index' => 'List', 'add' => 'Add New', 'edit' => 'Edit', 'sample_copy' => 'Sample Copy', 'view' => 'View Detail', 'delete' => 'Delete']],
                    ],
                'Report' =>
                    [
                        'Production Reprot' => ['controller' => 'poinformations', 'action' => ['traceability_report' => 'Traceability Report', 'audit_po_list' => 'Audit PO List', 'traceability_pending_report' => 'Traceability Pending Report', 'production_report' => 'In Production Report', 'merchandising_report' => 'Merchandising Report', 'order_cancel_request' => 'PO Cancel Request List', 'cancel_request_approval' => 'PO Cancel Approval', 'cancelled_order_report' => 'Cancelled Order Report']],
                        'Shipment Reprot' => ['controller' => 'fristatuses', 'action' => ['shipment_report' => 'Shipment Report']],
                    ],
            ];
            $this->set('acls', $acl);
        }
    }

    /**
     * delete method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function delete($id = null)
    {
        $this->Role->id = $id;
        if (!$this->Role->exists()) {
            throw new NotFoundException(__('Invalid role'));
        }

        $this->request->allowMethod('post', 'delete');
        if ($this->Role->delete()) {

            $data = $this->encode($id . '|' . time());
            $this->curlSend('roles/ajax_delete', array('_t_' => time(), 'd' => $data));

            $this->Flash->success('The role has been deleted.');
        } else {
            $this->Flash->error('The role could not be deleted. Please, try again.');
        }
        return $this->redirect(array('action' => 'index'));
    }

    /**
     * check username exist by ajax
     *
     * @throws NotFoundException
     * @param string $username
     * @return void
     */
    public function ajax_checkrole()
    {
        $this->autoRender = FALSE;

        $conditions = ["title" => $this->request->data('ttl')];
        if ($this->request->data('uid')) {
            $conditions[] = ["id <> " . $this->request->data('uid')];
        }

        $user = $this->Role->find('first', array('conditions' => $conditions, 'fields' => array('id'), 'recursive' => -1));
        if (count($user) > 0) {
            echo 'Please use another title';
        } else {
            echo false;
        }
    }
}
